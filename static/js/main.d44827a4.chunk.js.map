{"version":3,"sources":["img/virus.svg","img/home.svg","img/hands.svg","img/distance.svg","img/mask.svg","img/medical.svg","img/sneeze.svg","img/fever.svg","img/cough.svg","img/fatigue.svg","img/ache.svg","img/sorethroat.svg","img/Diarrhea.svg","img/Conjunctivitis.svg","img/headache.svg","img/rash.svg","serviceWorker.js","components/Loader.js","components/Header.js","components/Stats.js","components/Table.js","components/StatsMap.js","components/Info.js","components/Footer.js","components/Snackbar.js","App.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","navigator","addEventListener","serviceWorker","register","process","console","log","Loader","props","className","loading","Header","countryData","selectedCountry","handleCountryChange","src","logo","alt","name","value","onChange","key","map","country","countryInfo","_id","Stats","globalData","type","handleTypeChange","useState","info","setInfo","modifyNum","num","numeral","format","useEffect","Number","i","length","tabIndex","onClick","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths","timeStamp","present","Date","updateTime","isNaN","getTime","parseInt","Math","abs","diffTime","updated","GlobalFilter","globalFilter","setGlobalFilter","setValue","useAsyncDebounce","undefined","e","target","placeholder","Table","columns","useMemo","accessor","data","elem","active","useTable","initialState","pageSize","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","prepareRow","visibleColumns","state","page","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","colSpan","row","getRowProps","cells","cell","getCellProps","render","disabled","StatsMap","color","multiplier","caseType","coord","setCoord","lat","long","Map","center","zoom","style","height","width","TileLayer","url","attribution","CircleMarker","radius","sqrt","fillOpacity","onMouseOver","openPopup","onMouseOut","closePopup","Popup","textAlign","Info","home","distance","hands","mask","sneeze","medical","fever","cough","fatigue","ache","sorethroat","Diarrhea","Conjunctivitis","headache","rash","Footer","href","rel","Snackbar","hidden","setHidden","message","time","setTimeout","App","setGlobalData","setCountryData","setSelectedCountry","setType","setLoading","deferredPrompt","setDeferredPrompt","preventDefault","headers","req1","axios","get","req2","Promise","all","then","values","catch","err","alert","event","change","prompt","onLine","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d44827a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/virus.8145c6ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.b03d9b1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/hands.b8374ff5.svg\";","module.exports = __webpack_public_path__ + \"static/media/distance.510bf4af.svg\";","module.exports = __webpack_public_path__ + \"static/media/mask.49a9b544.svg\";","module.exports = __webpack_public_path__ + \"static/media/medical.b417ee3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sneeze.52b31552.svg\";","module.exports = __webpack_public_path__ + \"static/media/fever.a33924c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/cough.7f3c45a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/fatigue.d2869c45.svg\";","module.exports = __webpack_public_path__ + \"static/media/ache.0d18e232.svg\";","module.exports = __webpack_public_path__ + \"static/media/sorethroat.fb22c814.svg\";","module.exports = __webpack_public_path__ + \"static/media/Diarrhea.6b4bcf81.svg\";","module.exports = __webpack_public_path__ + \"static/media/Conjunctivitis.21f702d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/headache.017cd718.svg\";","module.exports = __webpack_public_path__ + \"static/media/rash.1efa8b1d.svg\";","/** utils. put it in different file */\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === \"[::1]\" ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\n// Check that service workers are supported\r\nif (\"serviceWorker\" in navigator) {\r\n  // Use the window load event to keep the page load performant\r\n  window.addEventListener(\"load\", () => {\r\n    if (isLocalhost) {  // loading custom service worker from local relative path to serviceWorker.js from localhost\r\n      navigator.serviceWorker.register(\"./custom-sw.js\");\r\n    } else {\r\n      navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/custom-sw.js`);\r\n    }\r\n  });\r\n}else{\r\n  console.log('Service Worker Not Present!');\r\n}","import React from 'react';\r\n\r\nexport default function Loader(props) {\r\n    return <div className={`loader ${props.loading ? '' : 'fadeOut-animation'}`}>\r\n    </div>\r\n}","import React from 'react'\r\nimport logo from '../img/virus.svg'\r\n\r\nexport default function Header(props) {\r\n    const { countryData, selectedCountry, handleCountryChange } = props;\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__text\">\r\n                <img src={logo} alt=\"Virus Logo\" className=\"header__logo\" />\r\n                <span className=\"header__text--title\">COVID-19 Tracker</span>\r\n            </div>\r\n            <div className=\"header__select\">\r\n                <select\r\n                    name=\"country-list\"\r\n                    className=\"header__select--input\"\r\n                    value={selectedCountry}\r\n                    onChange={handleCountryChange}\r\n                >\r\n                    <option key=\"-1\" value={-1}>Worldwide</option>\r\n                    {countryData.map(country => {\r\n                        if (!country.countryInfo._id) {\r\n                            return false;\r\n                        }\r\n                        return (\r\n                            <option\r\n                                key={country.countryInfo._id}\r\n                                value={country.countryInfo._id} >\r\n                                {country.country}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport numeral from \"numeral\"\r\n\r\nexport default function Stats(props) {\r\n    const { countryData, selectedCountry, globalData, type, handleTypeChange } = props;\r\n    const [info, setInfo] = useState({});\r\n    //console.log(info);\r\n\r\n    const modifyNum = (num) => {\r\n        return numeral(num).format('0.0a');\r\n    }\r\n\r\n    const diffTime = (timeStamp) => {\r\n        const present = new Date();\r\n        const updateTime = new Date(timeStamp);\r\n        if (isNaN(updateTime.getTime())) {\r\n            return '-'\r\n        }\r\n        const minutes = parseInt(Math.abs(updateTime.getTime() - present.getTime()) / (1000 * 60) % 60);\r\n        return minutes;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Number(selectedCountry) === -1) {\r\n            setInfo(globalData);\r\n        } else {\r\n            for (let i = 0; i < countryData.length; i++) {\r\n                if (countryData[i].countryInfo._id === Number(selectedCountry)) {\r\n                    setInfo(countryData[i]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }, [countryData, selectedCountry, globalData])\r\n\r\n    return (\r\n        <div className=\"stats-boxes\">\r\n            <div className=\"stats-boxes--boxes\">\r\n                <div tabIndex=\"1\" className={`box box--1 ${type===\"NEW\" ? 'selected' : ''}`} onClick={() => {handleTypeChange(\"NEW\")}}>\r\n                    <div className=\"box__title\">New Cases</div>\r\n                    <div className=\"box__new\">{modifyNum(info.todayCases)}</div>\r\n                    <div className=\"box__total\">{modifyNum(info.cases)}</div>\r\n                </div>\r\n\r\n                <div tabIndex=\"-1\" className={`box box--2 ${type===\"RECOV\" ? 'selected' : ''}`} onClick={() => {handleTypeChange(\"RECOV\")}}>\r\n                    <div className=\"box__title\">Recovered</div>\r\n                    <div className=\"box__new\">{modifyNum(info.todayRecovered)}</div>\r\n                    <div className=\"box__total\">{modifyNum(info.recovered)}</div>\r\n                </div>\r\n\r\n                <div tabIndex=\"-1\" className={`box box--3 ${type===\"DEATH\" ? 'selected' : ''}`} onClick={() => {handleTypeChange(\"DEATH\")}}>\r\n                    <div className=\"box__title\">Deaths</div>\r\n                    <div className=\"box__new\">{modifyNum(info.todayDeaths)}</div>\r\n                    <div className=\"box__total\">{modifyNum(info.deaths)}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"stats-boxes--time\">\r\n                <i>Last Updated: <strong>{diffTime(info.updated)} mins</strong> ago</i>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useMemo, useState } from 'react';\r\nimport { useTable, useGlobalFilter, useAsyncDebounce, usePagination } from 'react-table'\r\n\r\n// UI for filtering\r\nfunction GlobalFilter({ globalFilter, setGlobalFilter }) {\r\n    const [value, setValue] = useState(globalFilter)\r\n    const onChange = useAsyncDebounce(value => {\r\n        setGlobalFilter(value || undefined)\r\n    }, 200)\r\n\r\n    return (\r\n        <input\r\n            value={value || \"\"}\r\n            onChange={e => { setValue(e.target.value); onChange(e.target.value); }}\r\n            placeholder={'Search for a country..'}\r\n        />\r\n    )\r\n}\r\n\r\nexport default function Table(props) {\r\n    const { countryData } = props;\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Country',\r\n                accessor: 'country',\r\n            },\r\n            {\r\n                Header: 'Active Cases',\r\n                accessor: 'active',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const data = useMemo(() => {\r\n        return countryData.map((elem) => { return { country: elem.country, active: elem.cases - elem.recovered - elem.deaths } });\r\n    }, [countryData])\r\n\r\n    const { getTableProps, getTableBodyProps, prepareRow, visibleColumns, state, setGlobalFilter, page, canPreviousPage, canNextPage, pageCount, gotoPage, nextPage, previousPage } = useTable({ columns, data, initialState: { pageSize: 15 } }, useGlobalFilter, usePagination)\r\n\r\n    return (\r\n        <div className=\"stats-table\">\r\n            <h2 className=\"stats-table--header\">\r\n                Live Cases by Country\r\n            </h2>\r\n            <table {...getTableProps()} className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th\r\n                            colSpan={visibleColumns.length}\r\n                        >\r\n                            <GlobalFilter\r\n                                globalFilter={state.globalFilter}\r\n                                setGlobalFilter={setGlobalFilter}\r\n                            />\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"stats-table--pagination\">\r\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                    {'<<'}\r\n                </button>{' '}\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    {'<'}\r\n                </button>{' '}\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    {'>'}\r\n                </button>{' '}\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                    {'>>'}\r\n                </button>{' '}\r\n            </div>\r\n        </div>\r\n    );\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport { Map, TileLayer, Popup, CircleMarker } from 'react-leaflet'\r\nimport numeral from \"numeral\"\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nexport default function StatsMap(props) {\r\n    const { countryData, selectedCountry, type } = props;\r\n    const [coord, setCoord] = useState([20, 77]);\r\n    let color, multiplier, caseType;\r\n\r\n    switch (type) {\r\n        case \"NEW\":\r\n            color = \"#F1A139\";\r\n            multiplier = 0.05;\r\n            caseType = \"cases\";\r\n            break;\r\n        case \"RECOV\":\r\n            color = \"#7dd71d\";\r\n            multiplier = 0.06;\r\n            caseType = \"recovered\";\r\n            break;\r\n        case \"DEATH\":\r\n            color = \"#F23A3A\";\r\n            multiplier = 0.2;\r\n            caseType = \"deaths\";\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Number(selectedCountry) === -1) {\r\n            setCoord([20, 77]);\r\n        } else {\r\n            for (let i = 0; i < countryData.length; i++) {\r\n                if (countryData[i].countryInfo._id === Number(selectedCountry)) {\r\n                    setCoord([countryData[i].countryInfo.lat, countryData[i].countryInfo.long]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }, [countryData, selectedCountry])\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <Map center={coord} zoom={2.5} style={{ height: '100%', width: '100%' }}>\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    target=\"_blank\"\r\n                    attribution=\"&copy; <a target='_blank' href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                />\r\n                {\r\n                    countryData.map((country) => {\r\n                        if (country.countryInfo._id) {\r\n                            return <CircleMarker\r\n                                center={[country.countryInfo.lat, country.countryInfo.long]}\r\n                                color={color}\r\n                                radius={Math.sqrt(country[caseType]) * multiplier}\r\n                                key={country.countryInfo._id}\r\n                                fillOpacity={0.4}\r\n                                onMouseOver={(e) => { e.target.openPopup() }}\r\n                                onMouseOut={(e) => { e.target.closePopup() }}\r\n                            >\r\n                                <Popup>\r\n                                    <h2 style={{ textAlign: \"center\" }}>\r\n                                        {country.country}\r\n                                    </h2>\r\n                                    <br />\r\n                                    <div>\r\n                                        <strong>Cases: </strong>{numeral(country.cases).format()}\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>Recovered: </strong> {numeral(country.recovered).format()}\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>Deaths: </strong> {numeral(country.deaths).format()}\r\n                                    </div>\r\n                                </Popup>\r\n                            </CircleMarker>\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    })\r\n                }\r\n            </Map>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\n\r\nimport home from '../img/home.svg';\r\nimport hands from '../img/hands.svg';\r\nimport distance from '../img/distance.svg';\r\nimport mask from '../img/mask.svg';\r\nimport medical from '../img/medical.svg';\r\nimport sneeze from '../img/sneeze.svg';\r\n\r\nimport fever from '../img/fever.svg';\r\nimport cough from '../img/cough.svg';\r\nimport fatigue from '../img/fatigue.svg';\r\nimport ache from '../img/ache.svg';\r\nimport sorethroat from '../img/sorethroat.svg';\r\nimport Diarrhea from '../img/Diarrhea.svg';\r\nimport Conjunctivitis from '../img/Conjunctivitis.svg';\r\nimport headache from '../img/headache.svg';\r\nimport rash from '../img/rash.svg';\r\n\r\n\r\nexport default function Info() {\r\n    return <div className=\"info\">\r\n        <Tabs>\r\n            <TabList>\r\n                <Tab>Prevention</Tab>\r\n                <Tab>Symptoms</Tab>\r\n            </TabList>\r\n\r\n            <TabPanel className=\"prevention\">\r\n                <div className=\"prevention-icons\">\r\n                    <div className=\"icon\">\r\n                        <img src={home} alt=\"stay-home\" />\r\n                        <span className=\"icon__head\">Stay at home</span>\r\n                        <span className=\"icon__text\">as much as you can.</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={distance} alt=\"social-distance\" />\r\n                        <span className=\"icon__head\">Observe social distancing</span>\r\n                        <span className=\"icon__text\">from others around you.</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={hands} alt=\"wash-hands\" />\r\n                        <span className=\"icon__head\">Wash your hands often</span>\r\n                        <span className=\"icon__text\">Use soap and water, or an alcohol-based hand rub.</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={mask} alt=\"wear-mask\" />\r\n                        <span className=\"icon__head\">Wear a mask</span>\r\n                        <span className=\"icon__text\">when physical distancing is not possible.</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={sneeze} alt=\"cover-sneeze\" />\r\n                        <span className=\"icon__head\">Cover your cough / sneezee</span>\r\n                        <span className=\"icon__text\">with your bent elbow or a tissue.</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={medical} alt=\"medical\" />\r\n                        <span className=\"icon__head\">Seek medical attention</span>\r\n                        <span className=\"icon__text\">if you have a fever, cough and difficulty breathing.</span>\r\n                    </div>\r\n                </div>\r\n            </TabPanel>\r\n            <TabPanel className=\"symptoms\">\r\n                <div className=\"symtoms-icons\">\r\n                    <div className=\"icon\">\r\n                        <img src={fever} alt=\"fever\" />\r\n                        <span className=\"icon__head\">Fever</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={cough} alt=\"cough\" />\r\n                        <span className=\"icon__head\">Dry Cough</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={fatigue} alt=\"fatigue\" />\r\n                        <span className=\"icon__head\">Fatigue</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={ache} alt=\"ache\" />\r\n                        <span className=\"icon__head\">Aches and Pains</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={sorethroat} alt=\"sore-throat\" />\r\n                        <span className=\"icon__head\">Sore Throat</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={Diarrhea} alt=\"Diarrhea\" />\r\n                        <span className=\"icon__head\">Diarrhea</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={Conjunctivitis} alt=\"Conjunctivitis\" />\r\n                        <span className=\"icon__head\">Conjunctivitis</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={headache} alt=\"headache\" />\r\n                        <span className=\"icon__head\">Headache</span>\r\n                    </div>\r\n\r\n                    <div className=\"icon\">\r\n                        <img src={rash} alt=\"rash\" />\r\n                        <span className=\"icon__head\">Rash on Skin / Discoloration of Fingers or Toes</span>\r\n                    </div>\r\n                </div>\r\n            </TabPanel>\r\n        </Tabs>\r\n    </div>\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return <footer className=\"footer\">\r\n        <a\r\n            href=\"https://rohitbajaj.in/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"footer--link\"\r\n        >\r\n            rohit bajaj\r\n        </a>\r\n        <a\r\n            href=\"https://www.linkedin.com/in/rbajaj1997/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\" className=\"footer--link\"\r\n        >\r\n            LinkedIn\r\n    </a>\r\n        <a\r\n            href=\"https://github.com/rbajaj1997/covid-tracker\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"footer--link\"\r\n        >\r\n            github\r\n    </a>\r\n    </footer>\r\n}","import React, { useState, useEffect }  from 'react';\r\n\r\nexport default function Snackbar(props) {\r\n    const [hidden, setHidden] = useState(false);\r\n    const { message, time } = props;\r\n    console.log(hidden);\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setHidden(true);\r\n            console.log('Timeout Done');\r\n        }, time)\r\n    }, [time])\r\n\r\n\r\n    return <div className={`snackbar leftToRight-animation ${hidden ? 'hidden' : ''}`}>\r\n        {message}\r\n    </div>\r\n}","import React, { useEffect, useState, Fragment } from 'react';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport './App.scss';\r\nimport axios from 'axios';\r\nimport Loader from './components/Loader';\r\nimport Header from './components/Header';\r\nimport Stats from './components/Stats';\r\nimport Table from './components/Table';\r\nimport StatsMap from './components/StatsMap';\r\nimport Info from './components/Info';\r\nimport Footer from './components/Footer';\r\nimport Snackbar from './components/Snackbar';\r\n\r\nexport default function App(props) {\r\n\tconst [globalData, setGlobalData] = useState({});\r\n\tconst [countryData, setCountryData] = useState([]);\r\n\tconst [selectedCountry, setSelectedCountry] = useState(-1);\r\n\tconst [type, setType] = useState(\"NEW\");\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [deferredPrompt, setDeferredPrompt] = useState(null);\r\n\r\n\tconst handleCountryChange = (event) => {\r\n\t\tsetSelectedCountry(event.target.value);\r\n\t}\r\n\r\n\t// Code for Install Prompt\r\n\twindow.addEventListener('beforeinstallprompt', (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('Before Install Prompt fired!');\r\n\t\tsetDeferredPrompt(e);\r\n\t\treturn false;\r\n\t});\r\n\r\n\tconsole.log(deferredPrompt);\r\n\r\n\tconst onButtonClick = () => {\r\n\t\tconsole.log('Yes!!');\r\n\t\tdeferredPrompt.prompt();\r\n\t}\r\n\r\n\tconst handleTypeChange = (change) => {\r\n\t\tsetType(change);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst headers = {\r\n\t\t\t'Cache-Control': 'no-cache',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t};\r\n\r\n\t\tconst req1 = axios.get(`https://disease.sh/v3/covid-19/all`, { headers });\r\n\t\tconst req2 = axios.get(`https://disease.sh/v3/covid-19/countries?sort=cases&allowNull=true`, { headers });\r\n\r\n\t\tPromise.all([req1, req2]).then((values) => {\r\n\t\t\tsetGlobalData(values[0].data);\r\n\t\t\tsetCountryData(values[1].data);\r\n\t\t\tsetLoading(false);\r\n\t\t}).catch((err) => {\r\n\t\t\tsetLoading(false);\r\n\t\t\talert(\"Error while fetching data!\");\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className={`app ${loading ? '' : 'fadeIn-animation'}`}>\r\n\t\t\t{loading ? <Loader loading={loading} /> : <Fragment>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tcountryData={countryData}\r\n\t\t\t\t\tselectedCountry={selectedCountry}\r\n\t\t\t\t\thandleCountryChange={handleCountryChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<Stats\r\n\t\t\t\t\tglobalData={globalData}\r\n\t\t\t\t\tcountryData={countryData}\r\n\t\t\t\t\tselectedCountry={selectedCountry}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\thandleTypeChange={handleTypeChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcountryData={countryData}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{!deferredPrompt ? null: <button onClick={onButtonClick}> Holla</button>}\r\n\r\n\t\t\t\t<StatsMap\r\n\t\t\t\t\tcountryData={countryData}\r\n\t\t\t\t\tselectedCountry={selectedCountry}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Info />\r\n\r\n\t\t\t\t{navigator.onLine ? null : <Snackbar message=\"Application offline!\" time={10000} />}\r\n\r\n\t\t\t\t<Footer />\r\n\t\t\t</Fragment>}\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// // If you want your app to work offline and load faster, you can change\r\n// // unregister() to register() below. Note this comes with some pitfalls.\r\n// // Learn more about service workers: https://bit.ly/CRA-PWA\r\n//  serviceWorker.unregister();"],"sourceRoot":""}